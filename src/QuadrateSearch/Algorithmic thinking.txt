Binary Search

Essentially, this algorithm works when I want to search something that can reduce to size / 2. 

Data structure: Linear: array; Non-linear: binary search tree.

In general, Time complexity: O(logN), Space complexity: O(1)

Analysis: searching for 3        T          S
           1 2 3| 4 5 6         O(1)       O(1)
            /              
        1 2| 3                  O(1)       O(0)
         /
        3                       O(1)       O(0)
       /
     ...                        ...        ...
  assume problem has a large 
  size N, there will be logN level
                      total:  logN * O(1)  O(1)
                                
Importantly, often the array should be sorted, however, is OK if the array is not sorted, the algorithm still works. 

Problems for unsorted array are: "Search in Rotated Sorted Array", "Guess Number", "2D Matrix Search".
Problems for sorted array are: "Search for a Range", "Search insert position", "Kth Smallest Element in a Sorted Matrix".
